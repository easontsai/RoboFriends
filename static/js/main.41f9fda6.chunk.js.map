{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","props","name","email","id","className","alt","src","CardList","robots","cardArray","map","user","index","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","style","overflowY","border","height","children","App","onSearchChange","event","setState","target","value","onClick","visible","handleOk","isModalVisible","handleCancel","state","fetch","then","response","json","users","this","filteredRobots","filter","robot","toLowerCase","includes","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"6MAqBeA,EAnBF,SAACC,GAAU,IAOfC,EAAmBD,EAAnBC,KAAMC,EAAaF,EAAbE,MAAOC,EAAMH,EAANG,GACpB,OACE,sBAAKC,UAAU,mDAAf,UACE,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,cACrB,gCACE,6BAAMF,IACN,4BAAKC,WCSEK,EArBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACZC,EAAYD,EAAOE,KAAI,SAACC,EAAMC,GAElC,OAIE,aAHA,CAGC,EAAD,CAEET,GAAIK,EAAOI,GAAOT,GAClBF,KAAMO,EAAOI,GAAOX,KACpBC,MAAOM,EAAOI,GAAOV,OAHfU,MAMZ,OACE,8BACIH,KCJOI,EAbG,SAAC,GAAiC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAChC,OACE,qBAAKX,UAAU,KAAf,SACE,uBACEA,UAAU,kCACVY,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCOHI,EAdA,SAACnB,GACd,OACE,qBACEoB,MAAO,CACLC,UAAW,SACXC,OAAQ,kBACRC,OAAQ,QAJZ,SAOGvB,EAAMwB,YCoDEC,E,kDAtDb,aAAe,IAAD,8BACZ,gBAcFC,eAAiB,SAACC,GAChB,EAAKC,SAAS,CAAEd,YAAaa,EAAME,OAAOC,SAhB9B,EAkBdC,QAAU,SAACJ,GACT,EAAKC,SAAS,CAAEI,SAAS,KAnBb,EAsBdC,SAAW,WACT,EAAKL,SAAS,CAAEM,gBAAgB,KAvBpB,EA0BdC,aAAe,WACb,EAAKP,SAAS,CAAEM,gBAAgB,KAzBhC,EAAKE,MAAQ,CACX5B,OAAQ,GACRM,YAAa,GACbkB,SAAS,GALC,E,gEASO,IAAD,OAClBK,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAW,EAAKb,SAAS,CAAEpB,OAAQiC,S,+BAkBnC,IAAD,EACyBC,KAAKN,MAA7B5B,EADD,EACCA,OAAQM,EADT,EACSA,YACV6B,EAAiBnC,EAAOoC,QAAO,SAACC,GACpC,OAAOA,EAAM5C,KAAK6C,cAAcC,SAASjC,EAAYgC,kBAEvD,OAAsB,IAAlBtC,EAAOwC,OACF,8CAGL,qCACE,oBAAI5C,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWW,aAAc2B,KAAKhB,iBAI9B,cAAC,EAAD,UACE,cAAC,EAAD,CAAUlB,OAAQmC,a,GAjDZM,aCMHC,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,QCAdO,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,eAAe,SAMhDX,M","file":"static/js/main.41f9fda6.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = (props) => {\n  // destructure - 解構賦值\n  // mirrors the construction of array and object literals\n  // props.name\n  // props.email\n  // props.id\n\n  const {name, email ,id} = props;\n  return(\n    <div className='bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n      <img alt='robots' src={`https://robohash.org/${id}?100x100`} />\n      <div>\n        <h2>{ name }</h2>\n        <p>{ email }</p>\n      </div>\n    </div>\n  );\n}\n\nexport default Card;\n","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({ robots }) => {\n  const cardArray = robots.map((user, index) => {\n    // use Array to collect all the robot list\n    return (\n      // Card.js定義props\n      // robots.js is just datas\n      // render Card 中id,name,eamil這個結構，資料來自{robots}，結構呈現樣子在Card中實現\n      <Card\n        key={ index }\n        id={robots[index].id}\n        name={robots[index].name}\n        email={robots[index].email}/>\n    )\n  })\n  return(\n    <div>\n      { cardArray }\n    </div>\n  )\n}\n\nexport default CardList;\n","import React from 'react';\n\nconst SearchBox = ({ searchfield, searchChange}) => {\n  return (\n    <div className='tc'>\n      <input\n        className='pa3 ba b--free bg-lightest-blue'\n        type='search'\n        placeholder='search robots'\n        onChange={searchChange}\n      />\n    </div>\n  )\n}\n\nexport default SearchBox;\n","import React from \"react\";\n\nconst Scroll = (props) => {\n  return (\n    <div\n      style={{\n        overflowY: \"scroll\",\n        border: \"1px solid black\",\n        height: \"80vh\",\n      }}\n    >\n      {props.children}\n    </div>\n  );\n};\n\nexport default Scroll;\n","import React, { Component } from \"react\";\nimport CardList from \"../components/CardList\";\nimport SearchBox from \"../components/SearchBox\";\nimport { Button, Modal } from \"antd\";\nimport Scroll from \"../components/Scroll\";\n\nclass App extends Component {\n  // class - constructor\n  // set state\n  constructor() {\n    super();\n    this.state = {\n      robots: [],\n      searchfield: \"\",\n      visible: false,\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => response.json())\n      .then((users) => this.setState({ robots: users }));\n  }\n\n  onSearchChange = (event) => {\n    this.setState({ searchfield: event.target.value });\n  };\n  onClick = (event) => {\n    this.setState({ visible: true });\n  };\n\n  handleOk = () => {\n    this.setState({ isModalVisible: false });\n  };\n\n  handleCancel = () => {\n    this.setState({ isModalVisible: false });\n  };\n\n  render() {\n    const { robots, searchfield } = this.state;\n    const filteredRobots = robots.filter((robot) => {\n      return robot.name.toLowerCase().includes(searchfield.toLowerCase());\n    });\n    if (robots.length === 0) {\n      return <h1>LOADING ....</h1>;\n    } else {\n      return (\n        <>\n          <h1 className=\"tc\">RoboFriends</h1>\n          <SearchBox searchChange={this.onSearchChange} />\n\n          {/*CardList = ({ robots }) - Props passing down\n          render CardList 中robots這個結構，資料來自{robots}，結構呈現樣子在Cardlist中實現*/}\n          <Scroll>\n            <CardList robots={filteredRobots} />\n          </Scroll>\n        </>\n      );\n    }\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport 'tachyons';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />,document.getElementById('root'));\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}